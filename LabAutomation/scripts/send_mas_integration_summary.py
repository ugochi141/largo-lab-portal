#!/usr/bin/env python3
"""Send MAS Lab integration summary to Teams"""

import asyncio
import sys
import os
from pathlib import Path
from datetime import datetime

# Add project root to path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from config.config_manager import ConfigManager
from integrations.teams_client import TeamsClient


async def send_summary():
    """Send integration summary to Teams"""
    
    config_manager = ConfigManager()
    teams_config = config_manager.get_teams_config()
    teams_client = TeamsClient(teams_config)
    
    summary = """**MAS Lab Channel Integration Summary**

**âœ… Successfully Integrated Channels:**

**1. Operational Information | MAS Lab All Staff**
   â€¢ Maintenance announcements
   â€¢ Workflow updates
   â€¢ Schedule changes
   â€¢ Process improvements
   â€¢ Downtime notifications

**2. Quality | MAS Lab All Staff**
   â€¢ QC alerts and failures
   â€¢ CAP/CLIA updates
   â€¢ Proficiency testing results
   â€¢ Incident reports
   â€¢ Corrective actions

**ðŸ”„ How It Works:**
1. Messages from MAS Lab channels are monitored
2. Relevant messages (based on keywords) are forwarded
3. High-priority items trigger immediate alerts
4. All messages are routed to appropriate dashboards
5. Your team stays informed without switching contexts

**ðŸ“Š Today's Activity:**
â€¢ Operational messages forwarded: 2
â€¢ Quality alerts forwarded: 3
â€¢ High priority alerts: 4
â€¢ Dashboard updates: Multiple

**ðŸŽ¯ Benefits:**
â€¢ No more missed critical updates from MAS Lab
â€¢ Automatic prioritization of quality issues
â€¢ Consolidated view in your team workspace
â€¢ Seamless integration with existing alerts

**ðŸ“‹ Next Actions:**
â€¢ Review forwarded messages in team channels
â€¢ Check Notion dashboards for detailed tracking
â€¢ Respond to any high-priority quality alerts
â€¢ Continue normal lab operations with enhanced visibility

Your Kaiser Permanente Lab team now has full visibility into MAS Lab communications!"""
    
    await teams_client.send_alert(
        "ðŸ“Š MAS Lab Integration Complete",
        summary,
        "success",
        {
            "Integration Status": "ACTIVE",
            "Channels Monitored": "2",
            "Messages Processed": "7",
            "High Priority Alerts": "4"
        }
    )
    
    print("âœ… MAS Lab integration summary sent to Teams!")

if __name__ == "__main__":
    asyncio.run(send_summary())





